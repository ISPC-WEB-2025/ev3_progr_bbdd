from .menu import MenuBase
from src.utils.func_aux import pausar, limpiar_pantalla

class MenuUsuario(MenuBase):
    def __init__(self, sistema):
        super().__init__(sistema)
        self.usuario = sistema.usuario_actual
        if not self.usuario:
            raise ValueError("No hay un usuario activo. Por favor, inicie sesi√≥n primero.")
    
    def mostrar_menu(self):
        """Muestra el men√∫ para usuarios est√°ndar"""
        while True:
            self.mostrar_encabezado("üë§ MEN√ö USUARIO")
            print("1. Ver mi perfil")
            print("2. Editar mi perfil")
            print("3. Cerrar sesi√≥n")
            print()
            
            opcion = input("Seleccione una opci√≥n (1-3): ").strip()
            
            if opcion == "1":
                self.mostrar_perfil_usuario()
            elif opcion == "2":
                self.editar_perfil()
            elif opcion == "3":
                self.sistema.cerrar_sesion()
                break
            else:
                print("\n‚ùå Opci√≥n no v√°lida.")
                pausar()
    
    def mostrar_perfil_usuario(self):
        """Muestra el perfil del usuario actual"""
        self.mostrar_encabezado("üë§ MI PERFIL")
        
        usuario = self.sistema.usuario_actual
        print(f"Usuario: {usuario.nombre_usuario}")
        print(f"Nombre: {usuario.perfil.nombre_completo}")
        print(f"Email: {usuario.perfil.email}")
        print(f"Tel√©fono: {usuario.perfil.telefono}")
        print(f"Direcci√≥n: {usuario.perfil.direccion}")
        
        pausar()
    
    # def mostrar_menu_principal(self):
    #     """Muestra el men√∫ principal del usuario est√°ndar"""
    #     while True:
    #         self.mostrar_encabezado("MEN√ö USUARIO")
            
    #         self.mostrar_opcion(1, "üë§", "Ver Mi Perfil Completo")
    #         self.mostrar_opcion(2, "‚úèÔ∏è", "Editar Mi Perfil")
    #         self.mostrar_opcion(3, "üìã", "Mis Actividades")
    #         self.mostrar_opcion(4, "‚öôÔ∏è", "Configuraci√≥n Personal")
    #         self.mostrar_opcion(5, "‚ùì", "Ayuda")
    #         self.mostrar_opcion(6, "üö™", "Cerrar Sesi√≥n")
            
    #         opcion = self.obtener_opcion(6)
            
    #         if opcion == '1':
    #             self.ver_perfil_completo()
    #         elif opcion == '2':
    #             self.editar_perfil()
    #         elif opcion == '3':
    #             self.ver_actividades()
    #         elif opcion == '4':
    #             self.configuracion_personal()
    #         elif opcion == '5':
    #             self.mostrar_ayuda()
    #         elif opcion == '6':
    #             print(f"\nüëã Hasta luego, {self.usuario.perfil.nombre_completo}!")
    #             pausar()
    #             break
    #         else:
    #             print("\n‚ùå Opci√≥n no v√°lida.")
    #             pausar()
    
    def ver_perfil_completo(self):
        """Muestra el perfil completo del usuario"""
        self.mostrar_encabezado("MI PERFIL COMPLETO")
        
        perfil = self.usuario.perfil.obtener_resumen()
        
        print("üë§ INFORMACI√ìN PERSONAL:")
        print(f"   ‚Ä¢ Usuario: {self.usuario.nombre_usuario}")
        print(f"   ‚Ä¢ Nombre completo: {perfil['nombre']}")
        print(f"   ‚Ä¢ Email: {perfil['email']}")
        print(f"   ‚Ä¢ Tel√©fono: {perfil['telefono']}")
        print(f"   ‚Ä¢ Direcci√≥n: {perfil['direccion']}")
        
        print("\nüè∑Ô∏è INFORMACI√ìN DE CUENTA:")
        print(f"   ‚Ä¢ Tipo de cuenta: {self.usuario.tipo}")
        print(f"   ‚Ä¢ Fecha de registro: {perfil['fecha_registro']}")
        print(f"   ‚Ä¢ √öltimo acceso: {perfil['ultimo_acceso']}")
        print(f"   ‚Ä¢ Total de sesiones: {perfil['total_sesiones']}")
        
        perfil_completo = "‚úÖ Completo" if self.usuario.perfil.tiene_datos_completos() else "‚ö†Ô∏è Incompleto"
        print(f"   ‚Ä¢ Estado del perfil: {perfil_completo}")
        
        if not self.usuario.perfil.tiene_datos_completos():
            print("\nüí° Tip: Completa tu perfil para acceder a todas las funcionalidades")
        
        print()
        pausar()
    
    def editar_perfil(self):
        """Permite editar el perfil del usuario"""
        usuario = self.sistema.usuario_actual
        
        while True:
            #limpiar_pantalla()            
            self._perfil_editado = False  
            self.mostrar_encabezado("EDITAR MI PERFIL")

            print("¬øQu√© informaci√≥n deseas actualizar?")
            print()
            # Muestro datos actuales y opciones de edici√≥n
            self.mostrar_opcion(1, "üìß", f"Email: [{usuario.perfil.email}]")
            self.mostrar_opcion(2, "üìû", f"Tel√©fono: [{usuario.perfil.telefono}]")
            self.mostrar_opcion(3, "üè†", f"Direcci√≥n: [{usuario.perfil.direccion}]")
            self.mostrar_opcion(4, "üîô", "Volver")
            
            opcion = self.obtener_opcion(4)
            
            if opcion == '1':
                nuevo_email = input("Nuevo email: ").strip()
                if nuevo_email:
                    usuario.perfil.email = nuevo_email
                    print(f"‚úÖ Email actualizado a: {nuevo_email}")
                    self._perfil_editado = True
                else:
                    print("‚ùå No se actualiz√≥ el Email")
            
            elif opcion == '2':
                nuevo_telefono = input("Nuevo tel√©fono: ").strip()
                if nuevo_telefono:
                    usuario.perfil.telefono = nuevo_telefono
                    print(f"‚úÖ Tel√©fono actualizado a: {nuevo_telefono}")
                    self._perfil_editado = True
                else:
                    print("‚ùå No se actualiz√≥ el Tel√©fono")

            elif opcion == '3':
                nueva_direccion = input("Nueva direcci√≥n: ").strip()
                if nueva_direccion:
                    usuario.perfil.direccion = nueva_direccion
                    print(f"‚úÖ Direcci√≥n actualizada a: {nueva_direccion}")
                    self._perfil_editado = True
            
            elif opcion == '4':
                print("\nüîô Volviendo al men√∫ principal...")
                #pausar()
                return

            if self._perfil_editado == True:
                # Marcar que el perfil ha sido editado
                print("\nüíæ Cambios guardados exitosamente")
            
            #pausar()
            

    # M√©todos comentados para evitar confusiones, ya que no se usan en el men√∫ actual.

    # def ver_actividades(self):
    #     """Muestra las actividades del usuario"""
    #     self.mostrar_encabezado("MIS ACTIVIDADES")
        
    #     perfil = self.usuario.perfil.obtener_resumen()
        
    #     print("üìã ACTIVIDADES RECIENTES:")
    #     print("   ‚Ä¢ Inicio de sesi√≥n exitoso")
    #     print("   ‚Ä¢ Acceso al perfil personal")
    #     print("   ‚Ä¢ Navegaci√≥n por el men√∫ principal")
    #     if hasattr(self, '_perfil_editado'):
    #         print("   ‚Ä¢ Perfil actualizado")
        
    #     print(f"\nüìä ESTAD√çSTICAS PERSONALES:")
    #     print(f"   ‚Ä¢ Sesiones totales: {perfil['total_sesiones']}")
    #     print(f"   ‚Ä¢ √öltima sesi√≥n: {perfil['ultimo_acceso']}")
    #     print(f"   ‚Ä¢ Miembro desde: {perfil['fecha_registro']}")
        
    #     completitud = "‚úÖ Completo" if self.usuario.perfil.tiene_datos_completos() else "‚ö†Ô∏è Incompleto"
    #     print(f"   ‚Ä¢ Estado del perfil: {completitud}")
    #     print()
        
    #     pausar()
    
    # def configuracion_personal(self):
    #     """Configuraci√≥n personal del usuario"""
    #     self.mostrar_encabezado("CONFIGURACI√ìN PERSONAL")
        
    #     print("‚öôÔ∏è OPCIONES DISPONIBLES:")
    #     print("   ‚Ä¢ Cambiar contrase√±a: Disponible")
    #     print("   ‚Ä¢ Actualizar informaci√≥n: Disponible")
    #     print("   ‚Ä¢ Configurar notificaciones: Disponible")
    #     print("   ‚Ä¢ Tema de interfaz: Cl√°sico")
    #     print()
    #     print("‚ÑπÔ∏è  Para realizar cambios, contacta al administrador.")
    #     print()
        
    #     pausar()
    
    # def mostrar_ayuda(self):
    #     """Muestra la ayuda del sistema"""
    #     self.mostrar_encabezado("AYUDA")
        
    #     print("‚ùì PREGUNTAS FRECUENTES:")
    #     print()
    #     print("¬øC√≥mo cambio mi contrase√±a?")
    #     print("   ‚Üí Contacta al administrador del sistema")
    #     print()
    #     print("¬øC√≥mo actualizo mi informaci√≥n?")
    #     print("   ‚Üí Ve a Configuraci√≥n Personal")
    #     print()
    #     print("¬øOlvid√© mi contrase√±a?")
    #     print("   ‚Üí Contacta al administrador para restablecerla")
    #     print()
    #     print("üìß Contacto: admin@sistema.com")
    #     print()
        
    #     pausar()